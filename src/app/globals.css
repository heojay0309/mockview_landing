@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  /* --h1: bold 54px/64px var(--ff); */
  letter-spacing: -1%;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}
.parent-div:hover .child-div {
  /* Default style for all children when any child is hovered */
  opacity: 0.5;
  /* display: hidden; */
}

.parent-div .child-div:hover {
  /* Style for the hovered child */
  opacity: 1;
  transform: scale(1.1);
}

/* Assuming you have a <span> element as a sibling to all .child-div inside .parent-div */
.parent-div:hover .child-div ~ span {
  visibility: hidden;
}

/* Specific span that is a sibling to the hovered .child-div should be visible and scaled */
.parent-div .child-div:hover ~ span {
  visibility: visible;
  transform: scale(1.1);
}

.main {
  height: 900px;
  /* width: 100vw; */
  /* max-width: 1440px; */
}
.subSection {
  display: flex;
  flex-direction: column;
  gap: 32px;
}
.subSection .sub {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.radial {
  border-radius: 50%;
  border: 1px;
  background: radial-gradient(50% 50% at 50% 50%, #0c1a3a 75.5%, #000000 100%);
}

.radialBorder {
  border: 8px;
  border-radius: 50%;
  border-color: #2f78e6;
  border-style: dotted;
  /* background: radial-gradient(50% 50% at 50% 50%, #0c1a3a 75.5%, #000000 100%); */
  /* opacity: 25%; */
  background-clip: content-box, border-box; /* Clips the first background to the content area, second to the border */
  /* background: radial-gradient(50% 50% at 50% 50%, #0c1a3a 75.5%, #000000 100%); */
}

.circle {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: #2f78e6;
  border: 5px dotted #2f78e6; /* Adjust the border size as needed */
}

.gradient-dotted-border {
  position: relative;
  width: 160px;
  height: 160px;
  border-radius: 50%;
  background: radial-gradient(circle, #2f78e6, #000000);
  overflow: hidden;
}

.gradient-dotted-border::before {
  content: '';
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 50%;
  background: repeating-radial-gradient(
    circle,
    #fff 0%,
    #fff 50%,
    transparent 50%,
    transparent 100%
  );
  background-size: 10px 10px;
  z-index: 1;
}

.content {
  position: absolute;
  top: 8px;
  left: 8px;
  right: 8px;
  bottom: 8px;
  background: white;
  border-radius: 50%;
  z-index: 2;
}

/* styles.css */
.layout-container {
  position: relative;
  min-height: 100vh; /* Full viewport height */
  padding-top: 64px; /* Adjust based on nav bar height */
  padding-bottom: 74px; /* Adjust based on footer height */
}

.background-component {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  z-index: -1; /* Ensures the background is behind the content */
}

.content-component {
  position: relative; /* Ensures content is placed above the background */
  z-index: 1; /* Optional: Explicitly setting a higher z-index for clarity */
  display: flex;
  flex-direction: column;
  /* Additional styling for your content */
}

.nav-bar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: max-content;
  z-index: 10; /* Ensure it's above other content */
  /* Additional styling for nav bar */
}
.footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50px; /* Adjust as needed */
  z-index: 10; /* Ensure it's above other content */
  /* Additional styling for footer */
}

@media (min-width: 640px) {
  .scroller__inner {
    padding-block: 0rem;
    display: flex;
    gap: 1rem;
    overflow-x: hidden;
  }

  .scroller[data-animated='true'] {
    overflow: hidden;
    /* display: flex; */
    position: relative;
    /* justify-content: space-between; */
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    mask: linear-gradient(90deg, transparent, white);
  }
  .scroller[data-animated='true'] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    overflow: hidden;
    display: flex;
    scale: 0.5;
    /* position: absolute; */
    animation-timeline: view();
    animation: scrolling linear both;
    animation-range-start: entry;
    animation-range-end: exit;
  }

  @keyframes scrolling {
    0% {
      opacity: 0;
      transform: translateX(-100%);
    }
    100% {
      opacity: 1;
      transform: translateX(0%);
    }
  }
}

.features {
  position: flex;
  overflow: hidden;
  /* width: max-content; */

  animation: flyLeft linear both;
  /* flex-wrap: nowrap; */
  animation-timeline: view();
  animation-range: entry 50px;
}

.features[data-direction='right'] {
  position: flex;
  overflow: hidden;

  /* width: max-content; */
  animation: flyRight linear both;
  animation-timeline: view();
  animation-range: entry 50px;
}

@keyframes flyLeft {
  0% {
    opacity: 0;
    transform: translateX(-100%);
  }

  100% {
    opacity: 1;
    transform: translateX(0%);
  }
}

@keyframes flyRight {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  100% {
    opacity: 1;
    transform: translateX(0%);
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-in {
  animation: fadeIn 300ms;
  /* animation-delay: 2s; Delay so it starts after the fade out */
}
.fade-in-slow {
  animation: fadeIn 1000ms;
  /* animation-delay: 2s; Delay so it starts after the fade out */
}

.fade-out {
  animation: fadeOut 300ms;
}
.fade-out-slow {
  animation: fadeOut 300ms;
}

@keyframes circle-left {
  /* 0% {
    transform: translate(-88px, 0px);
  }
  25% {
    transform: translate(0px, 72px);
  }
  50% {
    transform: translate(68px, 0px);
  }
  75% {
    transform: translate(0px, -80px);
  }
  100% {
    transform: translate(-88px, 0px);
  } */
  0% {
    transform: translate(-80px, 0px);
    transition: transform;
  }
  25% {
    transform: translate(0px, 72px);
    transition: transform;
  }
  50% {
    transform: translate(68px, 0px);
    transition: transform;
  }
  75% {
    transform: translate(0px, -80px);
    transition: transform;
  }
  100% {
    transform: translate(-80px, 0px);
    transition: transform;
  }
}
.circle-left {
  position: absolute;
  /* left: -88px;
  top: -72px; */
  left: 0px;
  top: 0px;
  height: 185px;
  width: 185px;
  animation: circle-left 4s infinite ease-in-out;
}
@keyframes circle-right {
  0% {
    transform: translate(80px, 0px);
    transition: transform;
  }
  25% {
    transform: translate(0px, -72px);
    transition: transform;
  }
  50% {
    transform: translate(-68px, 0px);
    transition: transform;
  }
  75% {
    transform: translate(0px, 80px);
    transition: transform;
  }
  100% {
    transform: translate(80px, 0px);
    transition: transform;
  }
}

.circle-right {
  position: absolute;
  left: 0px;
  top: 0px;
  height: 185px;
  width: 185px;
  animation: circle-right 4s infinite ease-in-out;
}

.scroll-watcher {
  height: 10px;
  position: fixed;
  top: 0;
  z-index: 1000;
  background-color: black;
  width: 100%;
  transform-origin: left;
  scale: 0.1 1;
  animation: scroll-watcher linear;
  animation-timeline: scroll(block);
}

@keyframes scroll-watcher {
  to {
    scale: 1 1;
  }
}
@keyframes rotate {
  0% {
    transform: translate(-50%, -50%);
  }
  100% {
    transform: translate(-50%, -50%);
  }
}

.spinIcon {
  position: absolute;
  transform: translate(-50%, -50%);
  animation: circle-icon 4s infinite ease-in-out;
}

.icon-container {
  position: absolute;
  /* top: 100%;
  left: 100%; */
  /* left: 0%; */
  /* top: 0%; */
  width: 506px;
  height: 270px;
  transform: translate(-50%, -50%);
  animation: rotate 10s infinite linear;
}

@media (min-width: 640px) {
  .hero {
    opacity: 0;
    scale: 0;
    height: 1500px;
    animation: fade-in linear backwards;
    animation-timeline: view();
    animation-range-start: entry;
    animation-range-end: exit;
  }

  @keyframes fade-in {
    0% {
      scale: 0;
      opacity: 0;
    }
    50% {
      scale: 0.5;
      opacity: 1;
    }
    100% {
      scale: 1;
      opacity: 0;
    }
  }
}

@keyframes expandOutwards {
  0% {
    transform: scale(0.5); /* Start smaller */
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: scale(2); /* Finish larger */
    opacity: 0;
  }
}

.star {
  width: 2px;
  height: 2px;
  background-color: rgb(220, 221, 185);
  position: absolute;
  border-radius: 50%;
  opacity: 0;
  animation: expandOutwards linear infinite;
}

@media (min-width: 640px) {
  /* sm */
  .hero {
    animation-range-end: contain;
    height: 1200px;
  }
}

@media (min-width: 768px) {
  /* md */
  .hero {
    animation-range-end: exit;
  }
  .scroller__inner {
    animation-duration: 20s; /* Faster animation on larger screens */
  }
}

@media (min-width: 1024px) {
  /* lg */
  .hero {
    animation-range-end: exit;
  }
}

@media (min-width: 1280px) {
  /* xl */
  .hero {
    animation-range-end: exit;

    height: 1500px;
  }
}
/* Initial state of the section */
.section-enter {
  opacity: 0;
  transform: translateY(20%);
}

/* Final state of the section */
.section-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.3s, transform 0.3s;
}

Initial state of the title .title-enter {
  transform: translateY(-0%);
}

/* Final state of the title */
.title-enter-active {
  transform: translateY(0);
  transition: transform 0.3s;
}

/* Initial state of the component (Faq or Contact) */
.component-enter {
  transform: translateY(100%);
}

/* Final state of the component (Faq or Contact) */
.component-enter-active {
  transform: translateY(0);
  transition: transform 0.5s;
}
.title-fade-enter {
  opacity: 0;
  transform: translateY(-10px);
}

.title-fade-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.5s, transform 0.5s;
}

.title-fade-exit {
  opacity: 1;
}

.title-fade-exit-active {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.5s, transform 0.5s;
}
.cursor {
  position: absolute;
  width: 16px; /* Customize the width for a thicker caret */
  /* border: 1px; */
  height: 2px;
  /* border-color: white; */
  background-color: white;
  animation: blink 1s steps(4, start) infinite;
  visibility: visible; /* Initially hidden */
}
.light .cursor {
  position: absolute;
  width: 16px; /* Customize the width for a thicker caret */
  /* border: 1px; */
  height: 2px;
  /* border-color: white; */
  background-color: black;
  animation: blink 1s steps(4, start) infinite;
  visibility: visible; /* Initially hidden */
}

@keyframes blink {
  to {
    visibility: hidden;
  }
}
